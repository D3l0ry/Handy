<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Handy</name>
    </assembly>
    <members>
        <member name="P:Handy.ColumnAttribute.Name">
            <summary>
            Имя поля в таблице базы данных
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.ForeignKeyName">
            <summary>
            Указывает внешний ключ текущей таблицы для связи с первичным ключем другой таблицы
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.ForeignTableKeyName">
            <summary>
            Указывает ключ для поиска по внешней таблицы (Работает только вместе с ForeignKeyName)
            </summary>
            <remarks> Если ключ не указан, то поиск выполняется по первичному ключу</remarks>
        </member>
        <member name="P:Handy.ColumnAttribute.ForeignTable">
            <summary>
            Указывает тип внешней таблицы
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.IsAutoGenerated">
            <summary>
            Указывает, что колонка самозаполняющейся
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.IsPrimaryKey">
            <summary>
            Указывает, что колонка является первичным ключем
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.IsForeignKey">
            <summary>
            Указывает, что колонка является внешним ключем
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.IsForeignColumn">
            <summary>
            Указывает, что колонка является внешней колонкой из другой таблицы
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.IsTable">
            <summary>
            Указывает, что колонка является таблицей
            </summary>
        </member>
        <member name="P:Handy.ColumnAttribute.IsValid">
            <summary>
            Првоеряет, не является ли поле внешним или таблицей, или с автогенерацией
            </summary>
        </member>
        <member name="P:Handy.ParameterAttribute.Name">
            <summary>
            Имя аргумента в хранимой процедуре
            </summary>
        </member>
        <member name="P:Handy.TableAttribute.Name">
            <summary>
            Имя таблицы в базе данных
            </summary>
        </member>
        <member name="P:Handy.TableAttribute.Schema">
            <summary>
            Имя схемы таблицы в базе данных
            </summary>
        </member>
        <member name="T:Handy.DataConverter">
            <summary>
            Класс для конвертации объектов из SqlDataReader
            </summary>
        </member>
        <member name="M:Handy.DataConverter.#ctor(System.Type)">
            <summary>
            Инициализатор
            </summary>
            <param name="type">Тип объекта, к которому нужно привести объекты из SqlDataReader</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Handy.DataConverter.ObjectType">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="M:Handy.DataConverter.GetInternalObject(System.Data.Common.DbDataReader)">
            <summary>
            Конвертирует поля из строки SqlDataReader в объекты выбранного типа
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:Handy.DataConverter.GetObjects(System.Data.Common.DbDataReader)">
            <summary>
            Получение массива объектов из таблицы
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:Handy.DataConverter.GetObject(System.Data.Common.DbDataReader)">
            <summary>
            Получение объекта из таблицы
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:Handy.Converter.TableConverter">
            <summary>
            Класс для конвертации объектов из SqlDataReader в тип определяющий таблицу базы данных
            </summary>
        </member>
        <member name="M:Handy.Converter.TableConverter.SetCreatedInstanceForeignTable(System.Object,System.Collections.Generic.KeyValuePair{System.Reflection.PropertyInfo,Handy.ColumnAttribute}@)">
            <summary>
            Получение объектов из внешней таблицы
            </summary>
            <param name="mainTable"></param>
            <param name="property"></param>
        </member>
        <member name="M:Handy.Converter.TableConverter.GetInternalObject(System.Data.Common.DbDataReader)">
            <summary>
            Получение объекта из таблицы
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:Handy.DatabaseContext">
            <summary>
            Абстрактный класс для работы с базой данных и ее таблицами
            </summary>
        </member>
        <member name="M:Handy.DatabaseContext.OnConfigure(Handy.ContextOptionsBuilder)">
            <summary>
            Вызывается при инициализации и до момента подключения к бд
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Handy.DatabaseContext.ExecuteProcedure``1(System.String,System.Object[])">
            <summary>
            Метод для вызова процедур базы данных.
            Если процедура имеет принимаемые аргументы, то ExecuteProcedure должен обязательно вызываться в методе
            </summary>
            <typeparam name="T"></typeparam>
            <param name="procedure">Имя хранимой процедуры</param>
            <param name="arguments">Аргументы, которые передаются в процедуру. Аргументы должны идти в порядке параметров метода</param>
            <returns></returns>
        </member>
        <member name="M:Handy.DatabaseContext.GetTable``1">
            <summary>
            Получает объект TableManager с указанным типом, который определяет модель таблицы из базы данных
            </summary>
            <typeparam name="Table">Тип, определяющий модель таблицы из базы данных</typeparam>
            <returns></returns>
        </member>
        <member name="M:Handy.SqlQueryExtensions.ExecuteProcedure``1(System.Data.Common.DbConnection,System.String,System.Object[])">
            <summary>
            Метод для вызова процедуры из базы данных.
            Если процедура имеет принимаемые аргументы, то ExecuteProcedure должен обязательно вызываться в методе, который полностью копирует аргументы процедуры
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sqlConnection"></param>
            <param name="procedureName"></param>
            <param name="arguments">Аргументы, которые передаются в процедуру. Аргументы должны идти в порядке параметров метода</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Handy.TableInteractions.TableQueryCreator.CreateInitialTableQuery">
            <summary>
            Создание запроса для главной таблицы
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
